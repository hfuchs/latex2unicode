Latex2Unicode
========================================================================

2010-04-08, Created by H Fuchs <code@hfuchs.net>

Latex2Unicode, l2u for short, turns a subset of TeX's mathematical
typesetting code irreversibly into a Unicode representation.  The
current subset is defined as everything that's being used in the test
suite (hey, that's as rigorous a definition you'll ever see!).


Design
------------------------------------------------------------------------

At heart, Latex2Unicode tries to implement a fixed-width-no-clue-version
of TeX' box-approach.  I don't know enough about official CS-language to
describe the approach in heavy-weight terms.  The story goes as follows:
l2u starts to parse the string given on the command-line from left to
right and immediately puts simple characters on a stack.  Whenever
a special character heralds the begin of a macro, l2u tries to
recursively determine the box dimensions and content that's associated
with it.  Sub- and superscript operators call for slightly different
handling (they are the only ones that need to know what went before).
Start reading from the part marked with "main()" and you should be fine.
The majority of the program are just handler functions that calculate
dimensions and squeeze boxes into each other.

Simple, non-nested example transformation:

    Input         Internal representation            Output

                    $box = {
                      content => [ 1, ---, 2 ]          1
    \frac12   ->      width   => 3,               ->   ---
                      height  => 3,                     2
                      foot    => 1,
                      head    => 1,
                    }

Whenever a box is nested into another, the parameters will be balanced
and matched accordingly, so that the baseline of the equation remains
undisturbed.


Remarks
------------------------------------------------------------------------

2010-04-16,  I started off trying to beat Jakub Wilk's Brightmare[0]
into accepting '\vec' and other things that just didn't work the way
I expected them to.

But.  No Human-readable documentation apart from a (gorgeous-looking,
ASCII-artified!) Polish README and an extremely rudimentary man-page.
Why don't I ever find a short, English-language design document with
a short philosophy section, ideas and starting points?  It's not that
hard, is it (I am available for consultation)?  And yes, I was
interested in hacking OCaml (I still am) - but leave some breadcrumbs,
man!  The only comments are:

  * a few TODOs and FIXMEs;
  * character class descriptions ('small Greek letters');
  * GPL-notice (Largest comment by far);
  * vim-config-string (Ah, so at least I know you prefer tw=96); and
  * separators (* --------------- *).

That's it.  For Christ's sake.  Am I the only one that doesn't
immediately grasp the intrinsic workings of a program > 300LOC without
a bit of hand-holding?  When will the god-like programmers the
Internet seems to be teeming with realise that they're *not* talking to
the machine (which is just a freaking coincidence), but to a Human being
instead?  That shit really looks interesting - what a waste.

And that's open source for you.  We're doomed to reinvent shit over and
over again.


[0] http://jwilk.net/software/brightmare


Documents
----------------------------------------------------------------------

  - perldoc perlunicode
  - http://en.wikipedia.org/wiki/Unicode_mathematical_operators

Not yet read:

  - http://unicode.org/reports/tr25/
  - http://unicode.org/notes/tn28/UTN28-PlainTextMath-v3.pdf


Misc
----------------------------------------------------------------------

Satan's Little Helper:

    perl -e 'use utf8; use Data::Dumper; print Dumper("UNICODE_CHAR")'

Test (see INSTALL, too):

    cd /tmp
    git clone git@github.com:hfuchs/latex2unicode
    cd latex2unicode
    perl Makefile.PL PREFIX=$HOME/local
    make test



TODO
----------------------------------------------------------------------

Build Process:

  * Do I really need a MANIFEST file?
  * Recommend GNU unifont, -gnu-unifont-medium-r-normal--0-0-75-75-c-0-iso10646-1
  * Module::Build vs ExtUtils::MakeMaker:
    MakeMaker looks much more pleasing/straightforward

Alternatives:

  * asciiTeX, <http://asciitex.sourceforge.net/>
  * BrightMaRe, <http://jwilk.net/software/brightmare>

Tec:

  * In '\frac12 e^{2x^2}', should there be a small gap between bar and 'e'?


Licence
----------------------------------------------------------------------

All of this is licenced under the most current version of the GNU Public
Licence.  Happy?

